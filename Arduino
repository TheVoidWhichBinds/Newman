/****************************************************************************** 
COMPILED: MOTOR DRIVER + ANALOG + DIGITAL + PULSE-COUNTER
******************************************************************************/

//Redboard pin declarations:
#define stp 7
#define dir 3
#define MS1 4
#define MS2 5
#define EN  6

#define stp 7
#define dir 3
#define MS1 4
#define MS2 5
#define EN  6

//Declare variables for functions
char user_input;
int x;
int y;
int state;
int i = 0;
int pushButton = 2;
int pulsepin = 2; 
volatile unsigned int pulse; 





void setup() {
  pinMode(stp, OUTPUT);
  pinMode(dir, OUTPUT);
  pinMode(MS1, OUTPUT);
  pinMode(MS2, OUTPUT);
  pinMode(EN, OUTPUT);
  pinMode(pushButton, INPUT); // make the pushbutton's pin an input
  pulse=0; // initializes pulse count
  pinMode(pulsepin, INPUT); 
  attachInterrupt(0, count_pulse, RISING); 
  resetEDPins(); //Set step, direction, microstep and enable pins to default states
  Serial.begin(9600); //Open Serial connection for debugging
  Serial.println("Begin motor control");
  Serial.println();
  Serial.println("Enter number for control option:");
  Serial.println("3. Turn at 1/8th microstep mode.");
  Serial.println();
}






//Main loop:
void loop() {
  while(Serial.available()){
      user_input = Serial.read(); //Read user input and trigger appropriate function
      digitalWrite(EN, LOW); //Pull enable pin low to allow motor control
      if (user_input =='3')
      {
        SmallStepMode();
      }
      else
      {
        Serial.println("Invalid option entered.");
      }
      resetEDPins();
  }
}





// slow increase and data-collection function:
void SmallStepMode()
{
  Serial.println("Stepping at 1/8th microstep mode.");
  digitalWrite(dir, LOW); //Pull direction pin low to move "forward" //Pretty sure this should be HIGH to increase B
  digitalWrite(MS1, HIGH); //Pull MS1, and MS2 high to set logic to 1/8th microstep resolution
  digitalWrite(MS2, HIGH);
  for(x= 1; x<1000; x++)  //Loop the forward stepping enough times for motion to be visible
  {
    digitalWrite(stp,HIGH); //Trigger one step forward
    delay(1000);
    digitalWrite(stp,LOW); //Pull step pin low so it can be triggered again
    delay(1);
    
    // reading and saving values from the Gaussmeter, discriminator, and pulse counter:
    // ANALOG:
    int sensorValue = analogRead(A0);
    Serial.print(sensorValue);

    //DIGITAL:
    int buttonState = digitalRead(A1); // read the input pin
    Serial.println(buttonState); // print out the state of the button

    //PULSE-COUNTER:
    interrupts(); 
    delay(1000); 
    noInterrupts(); 
    Serial.print("Pulses: "); 
    Serial.println(pulse);  
    pulse++;  


    delay(1000); // delay in between reads for stability
  }
  Serial.println("Enter new option");
  Serial.println();
}

